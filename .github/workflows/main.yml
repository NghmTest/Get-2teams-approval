name: Merge on Team Approval

on:
  workflow_dispatch:
  pull_request_review:
    types: [submitted]

env:
  ORG_NAME: ${{ secrets.ORG_NAME }}
  TOKEN: ${{ secrets.TOKEN }}

jobs:
  merge_on_approval:
    runs-on: ubuntu-latest
    steps: 
      - name: Get members
        run: |
          all_members=""
          for team_slug in "${{ fromJson(env.TEAMS) }}"; do
            echo "======= $team_slug ======"
            members=$(curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/orgs/$ORG_NAME/teams/$team_slug/members")
            echo "::set-output name=members_$team_slug::$members"
            all_members="$all_members $members"
          done
          echo "$all_members" >> members.txt

      - name: Get PR Reviews
        id: pr_reviews
        run: |
          reviews=$(curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${ORG_NAME}/Get-2teams-approval/pulls/1/reviews")
          echo "$reviews" >> reviews.json
          echo "$reviews" >> "$GITHUB_ENV"

      - name: Extract Approved Users
        id: approved_users
        run: |
          echo "$(echo $reviews | jq -r '.[] | .user.login' )"
          echo "$(echo $reviews | jq -r '.[] | .state' )"
          approved_users=$(echo "$reviews" | jq -r '.[] | select(.state == "APPROVED") | .user.login')
          echo "$approved_users"
